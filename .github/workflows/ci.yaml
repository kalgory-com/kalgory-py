name: CI
on:
  push: {}
  pull_request: {}

permissions:
  checks: write

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: python3 -m pytest tests --cov=kalgory --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
          retention-days: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run ruff check
        run: ruff check --output-format=github .
      - name: Run ruff format
        run: ruff format --diff

  report:
    name: Report
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: junit
          pattern: pytest-results-*
          merge-multiple: true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: ${{ always() }}
        with:
          report_paths: junit/test-results-*.xml
          check_name: pytest test report
